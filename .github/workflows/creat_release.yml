name: Build VpngateClient Executables

on:
  push:
    tags:
      #- 'v*'   # 如 v1.0.0 推送 tag 时触发

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest,macos-latest]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r pyinstaller
        shell: bash

      - name: Build Executable
        run: |
          mkdir -p dist-out
          if [ "${{ runner.os }}" == "Windows" ]; then
            pyinstaller --onefile --uac-admin --name VpngateClient-Windows-x64 -i VpngateClient/logo.ico VpngateClient/VpngateClient.py
            mv dist/VpngateClient-Windows-x64.exe dist-out/
          elif [ "${{ runner.os }}" == "macOS" ]; then
            pyinstaller --onefile --windowed --name VpngateClient-macOS-x64 -i VpngateClient/logo.icns VpngateClient/VpngateClient.py
            mv dist/VpngateClient-macOS-x64 dist-out/
          else
            pyinstaller --onefile --windowed --name VpngateClient-Linux-x64 -i VpngateClient/logo.png VpngateClient/VpngateClient.py
            mv dist/VpngateClient-Linux-x64 dist-out/
          fi
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: built-${{ runner.os }}
          path: dist-out/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display built structure
        run: ls -R artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: artifacts/**/*  # 上传所有平台构建产物
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}